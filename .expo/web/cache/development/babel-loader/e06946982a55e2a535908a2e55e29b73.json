{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/dagit/Desktop/gopaysapp/screens/Dashboard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LinearGradient as Gradient } from 'expo-linear-gradient';\nimport { Defs, LinearGradient, Stop } from 'react-native-svg';\nimport { Images, argonTheme } from \"../constants\";\nimport { Button, Block, Icon, Text, NavBar } from 'galio-framework';\nimport theme from \"../theme\";\nvar BASE_SIZE = theme.SIZES.BASE;\nvar GRADIENT_BLUE = ['#6B84CA', '#8F44CE'];\nvar GRADIENT_PINK = ['#D442F8', '#B645F5', '#9B40F8'];\nvar COLOR_WHITE = theme.COLORS.WHITE;\nvar COLOR_GREY = theme.COLORS.MUTED;\nvar cards = [{\n  title: 'BioData',\n  subtitle: '15 completed tasks',\n  icon: 'list-bullet',\n  iconFamily: 'Galio',\n  goesTo: 'BioData'\n}, {\n  title: 'Aquisitions',\n  subtitle: '15 completed tasks',\n  icon: 'bag-17',\n  iconFamily: 'Galio',\n  goesTo: 'BioData'\n}, {\n  title: 'Cards',\n  subtitle: '15 completed tasks',\n  icon: 'credit-card',\n  iconFamily: 'Galio',\n  goesTo: 'BioData'\n}, {\n  title: 'Settings',\n  subtitle: '15 completed tasks',\n  icon: 'settings-gear-65',\n  iconFamily: 'Galio',\n  goesTo: 'BioData'\n}];\n\nvar Dashboard = function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderHeader = function () {\n      return React.createElement(NavBar, {\n        title: \"Dashboard\",\n        onLeftPress: function onLeftPress() {\n          return _this.props.navigation.openDrawer();\n        },\n        leftIconColor: theme.COLORS.MUTED,\n        style: Platform.OS === 'android' ? {\n          marginTop: theme.SIZES.BASE\n        } : null\n      });\n    };\n\n    _this.renderCard = function (props, index) {\n      var navigation = _this.props.navigation;\n      var gradientColors = index % 2 ? GRADIENT_BLUE : GRADIENT_PINK;\n      return React.createElement(Block, {\n        row: true,\n        center: true,\n        card: true,\n        shadow: true,\n        space: \"between\",\n        style: styles.card,\n        key: props.title\n      }, React.createElement(Gradient, {\n        start: [0.45, 0.45],\n        end: [0.90, 0.90],\n        colors: gradientColors,\n        style: [styles.gradient, styles.left]\n      }, React.createElement(Icon, {\n        size: BASE_SIZE,\n        name: props.icon,\n        color: COLOR_WHITE,\n        family: props.iconFamily\n      })), React.createElement(Block, {\n        flex: true\n      }, React.createElement(Text, {\n        size: BASE_SIZE * 1.125\n      }, props.title), React.createElement(Text, {\n        size: BASE_SIZE * 0.875,\n        muted: true\n      }, props.subtitle)), React.createElement(Button, {\n        style: styles.right,\n        onPress: function onPress() {\n          return navigation.navigate(\"BioData\");\n        }\n      }, React.createElement(Icon, {\n        size: BASE_SIZE,\n        name: \"minimal-right\",\n        family: \"Galio\",\n        color: COLOR_GREY\n      })));\n    };\n\n    _this.renderCards = function () {\n      return cards.map(function (card, index) {\n        return _this.renderCard(card, index);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(Block, {\n        safe: true,\n        flex: true\n      }, this.renderHeader(), React.createElement(ScrollView, {\n        style: {\n          flex: 1\n        }\n      }, this.renderCards()));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  card: {\n    borderColor: 'transparent',\n    marginHorizontal: BASE_SIZE,\n    marginVertical: BASE_SIZE / 2,\n    padding: BASE_SIZE,\n    backgroundColor: COLOR_WHITE,\n    shadowOpacity: 0.40\n  },\n  menu: {\n    width: BASE_SIZE * 2,\n    borderColor: 'transparent'\n  },\n  settings: {\n    width: BASE_SIZE * 2,\n    borderColor: 'transparent'\n  },\n  left: {\n    marginRight: BASE_SIZE\n  },\n  right: {\n    width: BASE_SIZE * 2,\n    backgroundColor: 'transparent',\n    elevation: 0\n  },\n  gradient: {\n    width: BASE_SIZE * 3.25,\n    height: BASE_SIZE * 3.25,\n    borderRadius: BASE_SIZE * 3.25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["/home/dagit/Desktop/gopaysapp/screens/Dashboard.js"],"names":["React","LinearGradient","Gradient","Defs","Stop","Images","argonTheme","Button","Block","Icon","Text","NavBar","theme","BASE_SIZE","SIZES","BASE","GRADIENT_BLUE","GRADIENT_PINK","COLOR_WHITE","COLORS","WHITE","COLOR_GREY","MUTED","cards","title","subtitle","icon","iconFamily","goesTo","Dashboard","renderHeader","props","navigation","openDrawer","Platform","OS","marginTop","renderCard","index","gradientColors","styles","card","gradient","left","right","navigate","renderCards","map","flex","Component","StyleSheet","create","borderColor","marginHorizontal","marginVertical","padding","backgroundColor","shadowOpacity","menu","width","settings","marginRight","elevation","height","borderRadius","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet, ScrollView, Platform,\n} from 'react-native';\nimport { LinearGradient as Gradient } from 'expo-linear-gradient';\nimport { Defs, LinearGradient, Stop } from 'react-native-svg';\n// import { AreaChart } from 'react-native-svg-charts';\n//import * as shape from 'd3-shape';\n\n\n\nimport { Images, argonTheme } from \"../constants\"; \n\n\n\n// galio components\nimport {\n  Button, Block, Icon, Text, NavBar,\n} from 'galio-framework';\nimport theme from '../theme';\n\nconst BASE_SIZE = theme.SIZES.BASE;\nconst GRADIENT_BLUE = ['#6B84CA', '#8F44CE'];\nconst GRADIENT_PINK = ['#D442F8', '#B645F5', '#9B40F8'];\nconst COLOR_WHITE = theme.COLORS.WHITE;\nconst COLOR_GREY = theme.COLORS.MUTED; // '#D8DDE1';\n\n// mock data\nconst cards = [\n  {\n    title: 'BioData',\n    subtitle: '15 completed tasks',\n    icon: 'list-bullet',\n    iconFamily: 'Galio',\n    goesTo: 'BioData',\n  },\n\n  {\n    title: 'Aquisitions',\n    subtitle: '15 completed tasks',\n    icon: 'bag-17',\n    iconFamily: 'Galio',\n goesTo: 'BioData',\n  },\n  {\n    title: 'Cards',\n    subtitle: '15 completed tasks',\n    icon: 'credit-card',\n    iconFamily: 'Galio',\n goesTo: 'BioData',\n  },\n\n  {\n    title: 'Settings',\n    subtitle: '15 completed tasks',\n    icon: 'settings-gear-65',\n    iconFamily: 'Galio',\n goesTo: 'BioData',\n\n  },\n];\n\n\nclass Dashboard extends React.Component {\n  renderHeader = () => (\n    <NavBar\n      title=\"Dashboard\"\n      onLeftPress={() => this.props.navigation.openDrawer()}\n      leftIconColor={theme.COLORS.MUTED}\n       \n      style={Platform.OS === 'android' ? { marginTop: theme.SIZES.BASE } : null}\n    />\n  )\n\n\n\n  renderCard = (props, index) => {\n const { navigation } = this.props;\n\n    const gradientColors = index % 2 ? GRADIENT_BLUE : GRADIENT_PINK;\n\n    return (\n      <Block row center card shadow space=\"between\" style={styles.card} key={props.title}>\n        <Gradient\n          start={[0.45, 0.45]}\n          end={[0.90, 0.90]}\n          colors={gradientColors}\n          style={[styles.gradient, styles.left]}\n        >\n          <Icon\n            size={BASE_SIZE}\n            name={props.icon}\n            color={COLOR_WHITE}\n            family={props.iconFamily}\n          />\n        </Gradient>\n\n        <Block flex>\n          <Text size={BASE_SIZE * 1.125}>{props.title}</Text>\n          <Text size={BASE_SIZE * 0.875} muted>{props.subtitle}</Text>\n        </Block>\n        <Button style={styles.right} \n\n onPress={() => navigation.navigate(\"BioData\")}\n\n>\n          <Icon size={BASE_SIZE} name=\"minimal-right\" family=\"Galio\"  color={COLOR_GREY} />\n        </Button>\n      </Block>\n    );\n  }\n\n  renderCards = () => cards.map((card, index) => this.renderCard(card, index))\n\n  render() {\n const { navigation } = this.props;\n    return (\n      <Block safe flex>\n        {/* header */}\n        {this.renderHeader()}\n\n        {/* stats */}\n        \n\n        {/* cards */}\n        <ScrollView style={{ flex: 1 }}>\n          {this.renderCards()}\n        </ScrollView>\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    borderColor: 'transparent',\n    marginHorizontal: BASE_SIZE,\n    marginVertical: BASE_SIZE / 2,\n    padding: BASE_SIZE,\n    backgroundColor: COLOR_WHITE,\n    shadowOpacity: 0.40,\n  },\n  menu: {\n    width: BASE_SIZE * 2,\n    borderColor: 'transparent',\n  },\n  settings: {\n    width: BASE_SIZE * 2,\n    borderColor: 'transparent',\n  },\n  left: {\n    marginRight: BASE_SIZE,\n  },\n  right: {\n    width: BASE_SIZE * 2,\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n  gradient: {\n    width: BASE_SIZE * 3.25,\n    height: BASE_SIZE * 3.25,\n    borderRadius: BASE_SIZE * 3.25,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}