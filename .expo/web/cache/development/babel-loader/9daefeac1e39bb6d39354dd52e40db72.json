{"ast":null,"code":"var _jsxFileName = \"/home/dagit/Desktop/gopaysapp/navigation/Screens.js\";\nimport React from \"react\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Block } from \"galio-framework\";\nimport Register from \"../screens/Register\";\nimport Login from \"../screens/Login\";\nimport Borrow from \"../screens/Borrow\";\nimport Repay from \"../screens/Repay\";\nimport LoanHistory from \"../screens/LoanHistory\";\nimport BioData from \"../screens/BioData\";\nimport Dashboard from \"../screens/Dashboard\";\nimport Home from \"../screens/Home\";\nimport Onboarding from \"../screens/Onboarding\";\nimport Pro from \"../screens/Pro\";\nimport Profile from \"../screens/Profile\";\nimport Elements from \"../screens/Elements\";\nimport Articles from \"../screens/Articles\";\nimport CustomDrawerContent from \"./Menu\";\nimport { Icon, Header } from \"../components\";\nimport { argonTheme, tabs } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction ElementsStack(props) {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Elements\",\n    component: Elements,\n    options: {\n      header: function header(_ref) {\n        var navigation = _ref.navigation,\n            scene = _ref.scene;\n        return React.createElement(Header, {\n          title: \"Elements\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Pro\",\n    component: Pro,\n    options: {\n      header: function header(_ref2) {\n        var navigation = _ref2.navigation,\n            scene = _ref2.scene;\n        return React.createElement(Header, {\n          title: \"\",\n          back: true,\n          white: true,\n          transparent: true,\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      headerTransparent: true\n    }\n  }));\n}\n\nfunction ArticlesStack(props) {\n  var _this2 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Articles\",\n    component: Articles,\n    options: {\n      header: function header(_ref3) {\n        var navigation = _ref3.navigation,\n            scene = _ref3.scene;\n        return React.createElement(Header, {\n          title: \"Articles\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    }\n  }));\n}\n\nfunction ProfileStack(props) {\n  var _this3 = this;\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Profile\",\n    mode: \"card\",\n    headerMode: \"screen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      header: function header(_ref4) {\n        var navigation = _ref4.navigation,\n            scene = _ref4.scene;\n        return React.createElement(Header, {\n          title: \"Gopays\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#FFFFFF\"\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Borrow\",\n    component: BorrowStack\n  }), React.createElement(Stack.Screen, {\n    name: \"Repay\",\n    component: RepayStack\n  }), React.createElement(Stack.Screen, {\n    name: \"LoanHistory\",\n    component: LoanHistoryStack\n  }), React.createElement(Stack.Screen, {\n    name: \"BioData\",\n    component: BioDataStack\n  }));\n}\n\nfunction HomeStack(props) {\n  var _this4 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      header: function header(_ref5) {\n        var navigation = _ref5.navigation,\n            scene = _ref5.scene;\n        return React.createElement(Header, {\n          title: \"Home\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    }\n  }));\n}\n\nexport default function OnboardingStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Onboarding\",\n    component: Onboarding,\n    option: {\n      headerTransparent: true\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: AppStack\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterStack\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginStack\n  }));\n}\n\nfunction BorrowStack(props) {\n  var _this5 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Borrow\",\n    component: Borrow,\n    options: {\n      header: function header(_ref6) {\n        var navigation = _ref6.navigation,\n            scene = _ref6.scene;\n        return React.createElement(Header, {\n          title: \"Get a Loan\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#FFFFFF\"\n      }\n    }\n  }));\n}\n\nfunction RepayStack(props) {\n  var _this6 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Repay\",\n    component: Repay,\n    options: {\n      header: function header(_ref7) {\n        var navigation = _ref7.navigation,\n            scene = _ref7.scene;\n        return React.createElement(Header, {\n          title: \"Repay Your Loan\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#FFFFFF\"\n      }\n    }\n  }));\n}\n\nfunction LoanHistoryStack(props) {\n  var _this7 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"LoanHistory\",\n    component: LoanHistory,\n    options: {\n      header: function header(_ref8) {\n        var navigation = _ref8.navigation,\n            scene = _ref8.scene;\n        return React.createElement(Header, {\n          title: \"Your previous loans\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#FFFFFF\"\n      }\n    }\n  }));\n}\n\nfunction RegisterStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    option: {\n      headerTransparent: true\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginStack\n  }));\n}\n\nfunction BioDataStack(props) {\n  var _this8 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"BioData\",\n    component: BioData,\n    options: {\n      header: function header(_ref9) {\n        var navigation = _ref9.navigation,\n            scene = _ref9.scene;\n        return React.createElement(Header, {\n          title: \"Edit BioData\",\n          navigation: navigation,\n          scene: scene\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    }\n  }));\n}\n\nfunction LoginStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    option: {\n      headerTransparent: true\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileStack\n  }));\n}\n\nfunction DashboardStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    option: {\n      headerTransparent: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"BioData\",\n    component: BioDataStack\n  }));\n}\n\nfunction AppStack(props) {\n  var _this9 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, props);\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOptions: {\n      activeTintcolor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.75,\n        backgroundColor: \"transparent\",\n        paddingVertical: 16,\n        paddingHorizonal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        marginLeft: 12,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Profile\"\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: ProfileStack\n  }), React.createElement(Drawer.Screen, {\n    name: \"Info\",\n    component: BioDataStack\n  }), React.createElement(Drawer.Screen, {\n    name: \"Loan\",\n    component: BorrowStack\n  }));\n}","map":{"version":3,"sources":["/home/dagit/Desktop/gopaysapp/navigation/Screens.js"],"names":["React","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","Block","Register","Login","Borrow","Repay","LoanHistory","BioData","Dashboard","Home","Onboarding","Pro","Profile","Elements","Articles","CustomDrawerContent","Icon","Header","argonTheme","tabs","Dimensions","get","width","Stack","Drawer","Tab","ElementsStack","props","header","navigation","scene","cardStyle","backgroundColor","headerTransparent","ArticlesStack","ProfileStack","BorrowStack","RepayStack","LoanHistoryStack","BioDataStack","HomeStack","OnboardingStack","AppStack","RegisterStack","LoginStack","DashboardStack","flex","activeTintcolor","inactiveTintColor","activeBackgroundColor","itemStyle","paddingVertical","paddingHorizonal","justifyContent","alignContent","alignItems","overflow","labelStyle","fontSize","marginLeft","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Easing, Animated, Dimensions } from \"react-native\";\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport { Block } from \"galio-framework\";\n\n// screens\n\nimport Register from \"../screens/Register\";\nimport Login from \"../screens/Login\";\nimport Borrow from \"../screens/Borrow\";\nimport Repay from \"../screens/Repay\";\nimport LoanHistory from \"../screens/LoanHistory\";\nimport BioData from \"../screens/BioData\";\n\n\n\nimport Dashboard from \"../screens/Dashboard\";\n\n\nimport Home from \"../screens/Home\";\nimport Onboarding from \"../screens/Onboarding\";\nimport Pro from \"../screens/Pro\";\nimport Profile from \"../screens/Profile\";\nimport Elements from \"../screens/Elements\";\nimport Articles from \"../screens/Articles\";\n// drawer\nimport CustomDrawerContent from \"./Menu\";\n\n// header for screens\nimport { Icon, Header } from \"../components\";\nimport { argonTheme, tabs } from \"../constants\";\n\nconst { width } = Dimensions.get(\"screen\");\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction ElementsStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Elements\"\n        component={Elements}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Elements\" navigation={navigation} scene={scene} />\n          ),\n          cardStyle: { backgroundColor: \"#F8F9FE\" }\n        }}\n      />\n            <Stack.Screen\n        name=\"Pro\"\n        component={Pro}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header\n              title=\"\"\n              back\n              white\n              transparent\n              navigation={navigation}\n              scene={scene}\n            />\n          ),\n          headerTransparent: true\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction ArticlesStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Articles\"\n        component={Articles}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Articles\" navigation={navigation} scene={scene} />\n          ),\n          cardStyle: { backgroundColor: \"#F8F9FE\" }\n        }}\n      />\n\n\n\n\n\n\n    </Stack.Navigator>\n  );\n}\n\nfunction ProfileStack(props) {\n  return (\n    <Stack.Navigator initialRouteName=\"Profile\" mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header\n\n              title=\"Gopays\"\n              navigation={navigation}\n              scene={scene}\n            />\n          ),\n          cardStyle: { backgroundColor: \"#FFFFFF\" },\n\n        }}\n      />\n\n\n\n              <Stack.Screen name=\"Borrow\" component={BorrowStack} />\n                <Stack.Screen name=\"Repay\" component={RepayStack} />\n                <Stack.Screen name=\"LoanHistory\" component={LoanHistoryStack} />\n                  <Stack.Screen name=\"BioData\" component={BioDataStack} />\n\n\n\n    </Stack.Navigator>\n  );\n}\n\nfunction HomeStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header\n              title=\"Home\"\n\n              navigation={navigation}\n              scene={scene}\n            />\n          ),\n          cardStyle: { backgroundColor: \"#F8F9FE\" }\n        }}\n      />\n\n\n\n\n\n\n\n    </Stack.Navigator>\n  );\n}\n\nexport default function OnboardingStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\n      <Stack.Screen\n        name=\"Onboarding\"\n        component={Onboarding}\n        option={{\n          headerTransparent: true\n        }}\n      />\n\n      <Stack.Screen name=\"App\" component={AppStack} />\n      <Stack.Screen name=\"Register\" component={RegisterStack} />\n       <Stack.Screen name=\"Login\" component={LoginStack} />\n    </Stack.Navigator>\n  );\n}\n\n\n\n\n\n\nfunction BorrowStack(props) {\n return (\n   <Stack.Navigator mode=\"card\" headerMode=\"none\">\n     <Stack.Screen\n       name=\"Borrow\"\n       component={Borrow}\n       options={{\n\n         header: ({ navigation, scene }) => (\n           <Header\n\n             title=\"Get a Loan\"\n             navigation={navigation}\n             scene={scene}\n           />\n         ),\n         cardStyle: { backgroundColor: \"#FFFFFF\" },\n\n       }}\n     />\n\n   </Stack.Navigator>\n );\n}\n\n\n\n\n\nfunction RepayStack(props) {\n return (\n   <Stack.Navigator mode=\"card\" headerMode=\"none\">\n     <Stack.Screen\n       name=\"Repay\"\n       component={Repay}\n       options={{\n\n         header: ({ navigation, scene }) => (\n           <Header\n\n             title=\"Repay Your Loan\"\n             navigation={navigation}\n             scene={scene}\n           />\n         ),\n         cardStyle: { backgroundColor: \"#FFFFFF\" },\n\n       }}\n     />\n\n   </Stack.Navigator>\n );\n}\n\n\n\n\n\n\n\n\nfunction LoanHistoryStack(props) {\n return (\n   <Stack.Navigator mode=\"card\" headerMode=\"none\">\n     <Stack.Screen\n       name=\"LoanHistory\"\n       component={LoanHistory}\n       options={{\n\n         header: ({ navigation, scene }) => (\n           <Header\n\n             title=\"Your previous loans\"\n             navigation={navigation}\n             scene={scene}\n           />\n         ),\n         cardStyle: { backgroundColor: \"#FFFFFF\" },\n\n       }}\n     />\n\n   </Stack.Navigator>\n );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function RegisterStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\n      <Stack.Screen\n        name=\"Register\"\n        component={Register}\n        option={{\n          headerTransparent: true\n        }}\n      />\n       <Stack.Screen name=\"Login\" component={LoginStack} />\n    </Stack.Navigator>\n  );\n}\n\n\n\n\n\n function BioDataStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\n      <Stack.Screen\n        name=\"BioData\"\n        component={BioData}\n        options={{\n\n          header: ({ navigation, scene }) => (\n            <Header\n\n              title=\"Edit BioData\"\n              navigation={navigation}\n              scene={scene}\n            />\n          ),\n          cardStyle: { backgroundColor: \"#F8F9FE\" },\n\n        }}\n      />\n\n    </Stack.Navigator>\n  );\n}\n\n\n\n\n\n function LoginStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        option={{\n          headerTransparent: true\n        }}\n      />\n         <Stack.Screen name=\"Profile\" component={ProfileStack} />\n    </Stack.Navigator>\n  );\n}\n\n\n\n\n function DashboardStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Dashboard\"\n        component={Dashboard}\n        option={{\n          headerTransparent: false\n        }}\n      />\n        <Stack.Screen name=\"BioData\" component={BioDataStack} />\n    </Stack.Navigator>\n  );\n}\n\n\n\n\n\n\n\n\nfunction AppStack(props) {\n  return (\n    <Drawer.Navigator\n      style={{ flex: 1 }}\n      drawerContent={props => <CustomDrawerContent {...props} />}\n      drawerStyle={{\n        backgroundColor: \"white\",\n        width: width * 0.8\n      }}\n      drawerContentOptions={{\n        activeTintcolor: \"white\",\n        inactiveTintColor: \"#000\",\n        activeBackgroundColor: \"transparent\",\n        itemStyle: {\n          width: width * 0.75,\n          backgroundColor: \"transparent\",\n          paddingVertical: 16,\n          paddingHorizonal: 12,\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          overflow: \"hidden\"\n        },\n        labelStyle: {\n          fontSize: 18,\n          marginLeft: 12,\n          fontWeight: \"normal\"\n        }\n      }}\n      initialRouteName=\"Profile\"\n    >\n\n      <Drawer.Screen name=\"Home\" component={ProfileStack} />\n      <Drawer.Screen name=\"Info\" component={BioDataStack} />\n        <Drawer.Screen name=\"Loan\" component={BorrowStack} />\n\n\n\n\n\n \n    </Drawer.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}