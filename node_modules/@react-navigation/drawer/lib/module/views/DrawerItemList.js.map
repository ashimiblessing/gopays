{"version":3,"sources":["DrawerItemList.tsx"],"names":["React","CommonActions","DrawerActions","DrawerItem","DrawerItemList","state","navigation","descriptors","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","itemStyle","labelStyle","routes","map","route","i","focused","index","key","options","title","drawerLabel","drawerIcon","undefined","name","dispatch","closeDrawer","navigate","target"],"mappings":"68BAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OACEC,aADF,KAGO,2BAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAgBA,cAAe,SAASC,CAAAA,cAAT,MAUL,IATRC,CAAAA,KASQ,MATRA,KASQ,CARRC,UAQQ,MARRA,UAQQ,CAPRC,WAOQ,MAPRA,WAOQ,CANRC,eAMQ,MANRA,eAMQ,CALRC,iBAKQ,MALRA,iBAKQ,CAJRC,qBAIQ,MAJRA,qBAIQ,CAHRC,uBAGQ,MAHRA,uBAGQ,CAFRC,SAEQ,MAFRA,SAEQ,CADRC,UACQ,MADRA,UACQ,CACR,MAAQR,CAAAA,KAAK,CAACS,MAAN,CAAaC,GAAb,CAAiB,SAACC,KAAD,CAAQC,CAAR,CAAc,CACrC,GAAMC,CAAAA,OAAO,CAAGD,CAAC,GAAKZ,KAAK,CAACc,KAA5B,CADqC,0BAEMZ,WAAW,CAACS,KAAK,CAACI,GAAP,CAAX,CAAuBC,OAF7B,CAE7BC,KAF6B,uBAE7BA,KAF6B,CAEtBC,WAFsB,uBAEtBA,WAFsB,CAETC,UAFS,uBAETA,UAFS,CAIrC,MACE,qBAAC,UAAD,EACE,GAAG,CAAER,KAAK,CAACI,GADb,CAEE,KAAK,CACHG,WAAW,GAAKE,SAAhB,CACIF,WADJ,CAEID,KAAK,GAAKG,SAAV,CACAH,KADA,CAEAN,KAAK,CAACU,IAPd,CASE,IAAI,CAAEF,UATR,CAUE,OAAO,CAAEN,OAVX,CAWE,eAAe,CAAEV,eAXnB,CAYE,iBAAiB,CAAEC,iBAZrB,CAaE,qBAAqB,CAAEC,qBAbzB,CAcE,uBAAuB,CAAEC,uBAd3B,CAeE,UAAU,CAAEE,UAfd,CAgBE,KAAK,CAAED,SAhBT,CAiBE,OAAO,CAAE,kBAAM,CACbN,UAAU,CAACqB,QAAX,kBACMT,OAAO,CACPhB,aAAa,CAAC0B,WAAd,EADO,CAEP3B,aAAa,CAAC4B,QAAd,CAAuBb,KAAK,CAACU,IAA7B,CAHN,EAIEI,MAAM,CAAEzB,KAAK,CAACe,GAJhB,IAMD,CAxBH,iDADF,CA4BD,CAhCO,CAAR,CAiCD","sourcesContent":["import * as React from 'react';\nimport { CommonActions } from '@react-navigation/native';\nimport {\n  DrawerActions,\n  DrawerNavigationState,\n} from '@react-navigation/routers';\nimport DrawerItem from './DrawerItem';\nimport {\n  DrawerNavigationHelpers,\n  DrawerDescriptorMap,\n  DrawerContentOptions,\n} from '../types';\n\ntype Props = Omit<DrawerContentOptions, 'contentContainerStyle' | 'style'> & {\n  state: DrawerNavigationState;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default function DrawerItemList({\n  state,\n  navigation,\n  descriptors,\n  activeTintColor,\n  inactiveTintColor,\n  activeBackgroundColor,\n  inactiveBackgroundColor,\n  itemStyle,\n  labelStyle,\n}: Props) {\n  return (state.routes.map((route, i) => {\n    const focused = i === state.index;\n    const { title, drawerLabel, drawerIcon } = descriptors[route.key].options;\n\n    return (\n      <DrawerItem\n        key={route.key}\n        label={\n          drawerLabel !== undefined\n            ? drawerLabel\n            : title !== undefined\n            ? title\n            : route.name\n        }\n        icon={drawerIcon}\n        focused={focused}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        activeBackgroundColor={activeBackgroundColor}\n        inactiveBackgroundColor={inactiveBackgroundColor}\n        labelStyle={labelStyle}\n        style={itemStyle}\n        onPress={() => {\n          navigation.dispatch({\n            ...(focused\n              ? DrawerActions.closeDrawer()\n              : CommonActions.navigate(route.name)),\n            target: state.key,\n          });\n        }}\n      />\n    );\n  }) as React.ReactNode) as React.ReactElement;\n}\n"]}