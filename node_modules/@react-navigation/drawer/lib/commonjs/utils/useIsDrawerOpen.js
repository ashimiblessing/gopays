var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=useIsDrawerOpen;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var React=_interopRequireWildcard(require("react"));var _native=require("@react-navigation/native");function useIsDrawerOpen(){var navigation=(0,_native.useNavigation)();var drawer=navigation;while(drawer&&drawer.dangerouslyGetState().type!=='drawer'){drawer=drawer.dangerouslyGetParent();}var _React$useState=React.useState(function(){return drawer?Boolean(drawer.dangerouslyGetState().history.find(function(it){return it.type==='drawer';})):false;}),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isDrawerOpen=_React$useState2[0],setIsDrawerOpen=_React$useState2[1];React.useEffect(function(){var unsubscribe=drawer.addListener('state',function(e){setIsDrawerOpen(Boolean(e.data.state.history.find(function(it){return it.type==='drawer';})));});return unsubscribe;},[drawer,isDrawerOpen]);return isDrawerOpen;}
//# sourceMappingURL=useIsDrawerOpen.js.map